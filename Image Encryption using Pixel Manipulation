from PIL import Image
import os

def encrypt_image(input_path, output_path, key):
    try:
        image = Image.open(input_path)
        pixels = image.load()

        for i in range(image.size[0]):
            for j in range(image.size[1]):
                r, g, b = pixels[i, j]
                pixels[i, j] = ((r + key) % 256, (g + key) % 256, (b + key) % 256)

        image.save(output_path)
        print(f"Image encrypted and saved to {output_path}")
    except Exception as e:
        print("Error:", e)

def decrypt_image(input_path, output_path, key):
    try:
        image = Image.open(input_path)
        pixels = image.load()

        for i in range(image.size[0]):
            for j in range(image.size[1]):
                r, g, b = pixels[i, j]
                pixels[i, j] = ((r - key) % 256, (g - key) % 256, (b - key) % 256)

        image.save(output_path)
        print(f"Image decrypted and saved to {output_path}")
    except Exception as e:
        print("Error:", e)

def main():
    print("=== Image Encryption Tool ===")
    action = input("Encrypt or Decrypt? (e/d): ").lower()
    image_path = input("Enter image path (e.g. sample.jpg): ")
    key = int(input("Enter key (number): "))
    
    if not os.path.exists(image_path):
        print("Image not found!")
        return

    if action == 'e':
        encrypt_image(image_path, "encrypted_image.png", key)
    elif action == 'd':
        decrypt_image(image_path, "decrypted_image.png", key)
    else:
        print("Invalid option.")

if __name__ == "__main__":
    main()
